{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nclass DataSharingService {\n  constructor() {\n    this.tasksArraySubject = new BehaviorSubject([]);\n    this.tasks$ = this.tasksArraySubject.asObservable();\n  }\n  getTasks() {\n    axios.get('http://localhost:8080/tasks').then(response => {\n      const data = response.data;\n      this.tasksArraySubject = data;\n    }).catch(() => {\n      alert('Data Not Received');\n    });\n  }\n  addTask(task) {\n    const currentTasks = this.tasksArraySubject.value;\n    const updatedTasks = [...currentTasks, task];\n    this.tasksArraySubject.next(updatedTasks);\n  }\n}\nDataSharingService.ɵfac = function DataSharingService_Factory(t) {\n  return new (t || DataSharingService)();\n};\nDataSharingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataSharingService,\n  factory: DataSharingService.ɵfac,\n  providedIn: 'root'\n});\nexport { DataSharingService };","map":{"version":3,"names":["BehaviorSubject","axios","DataSharingService","constructor","tasksArraySubject","tasks$","asObservable","getTasks","get","then","response","data","catch","alert","addTask","task","currentTasks","value","updatedTasks","next","factory","ɵfac","providedIn"],"sources":["C:\\Users\\joesc\\Documents\\angular\\todolist2axios\\client\\src\\app\\rxjs\\DataService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport axios from 'axios';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataSharingService {\r\n  private tasksArraySubject = new BehaviorSubject<any[]>([]);\r\n\r\n  tasks$ = this.tasksArraySubject.asObservable();\r\n\r\n  getTasks() {\r\n    axios.get('http://localhost:8080/tasks')\r\n    .then((response) => {\r\n      const data = response.data;\r\n      this.tasksArraySubject = data;\r\n    })\r\n    .catch(() => {\r\n      alert('Data Not Received')\r\n    })\r\n  }\r\n\r\n  addTask(task: any) {\r\n    const currentTasks = this.tasksArraySubject.value;\r\n    const updatedTasks = [...currentTasks, task];\r\n    this.tasksArraySubject.next(updatedTasks);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;AACtC,OAAOC,KAAK,MAAM,OAAO;;AAEzB,MAGaC,kBAAkB;EAH/BC,YAAA;IAIU,KAAAC,iBAAiB,GAAG,IAAIJ,eAAe,CAAQ,EAAE,CAAC;IAE1D,KAAAK,MAAM,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;;EAE9CC,QAAQA,CAAA;IACNN,KAAK,CAACO,GAAG,CAAC,6BAA6B,CAAC,CACvCC,IAAI,CAAEC,QAAQ,IAAI;MACjB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAC1B,IAAI,CAACP,iBAAiB,GAAGO,IAAI;IAC/B,CAAC,CAAC,CACDC,KAAK,CAAC,MAAK;MACVC,KAAK,CAAC,mBAAmB,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEAC,OAAOA,CAACC,IAAS;IACf,MAAMC,YAAY,GAAG,IAAI,CAACZ,iBAAiB,CAACa,KAAK;IACjD,MAAMC,YAAY,GAAG,CAAC,GAAGF,YAAY,EAAED,IAAI,CAAC;IAC5C,IAAI,CAACX,iBAAiB,CAACe,IAAI,CAACD,YAAY,CAAC;EAC3C;;AApBWhB,kBAAkB,C;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB,C;SAAlBA,kBAAkB;EAAAkB,OAAA,EAAlBlB,kBAAkB,CAAAmB,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEPpB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}