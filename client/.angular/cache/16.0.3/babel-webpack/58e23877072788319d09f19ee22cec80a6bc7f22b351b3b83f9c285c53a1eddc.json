{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/rxjs/DataService\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nclass TaskFormComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.onFormSubmitted = new EventEmitter();\n    this.newTask = \"\";\n  }\n  addTask() {\n    const task = {\n      taskName: this.newTask,\n      completed: false\n    };\n    this.dataService.addTask(task);\n    this.onFormSubmitted.emit(this.newTask);\n    this.newTask = \"\";\n  }\n}\nTaskFormComponent.ɵfac = function TaskFormComponent_Factory(t) {\n  return new (t || TaskFormComponent)(i0.ɵɵdirectiveInject(i1.DataSharingService));\n};\nTaskFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskFormComponent,\n  selectors: [[\"app-task-form\"]],\n  outputs: {\n    onFormSubmitted: \"onFormSubmitted\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function TaskFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function TaskFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.addTask();\n      });\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskFormComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.newTask = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵtext(3, \"Add Task\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask)(\"ngModelOptions\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  encapsulation: 2\n});\nexport { TaskFormComponent };","map":{"version":3,"names":["EventEmitter","TaskFormComponent","constructor","dataService","onFormSubmitted","newTask","addTask","task","taskName","completed","emit","i0","ɵɵdirectiveInject","i1","DataSharingService","selectors","outputs","decls","vars","consts","template","TaskFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","TaskFormComponent_Template_form_ngSubmit_0_listener","TaskFormComponent_Template_input_ngModelChange_1_listener","$event","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\joesc\\Documents\\angular\\todolist2axios\\client\\src\\app\\components\\form\\form.component.ts","C:\\Users\\joesc\\Documents\\angular\\todolist2axios\\client\\src\\app\\components\\form\\form.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { DataSharingService } from 'src/app/rxjs/DataService';\nimport { TaskItem } from 'src/app/models/taskItem';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './form.component.html',\n})\nexport class TaskFormComponent {\n\n  newTask: string;\n  @Output() onFormSubmitted = new EventEmitter<TaskItem>()\n\n  constructor(private dataService: DataSharingService) {\n    this.newTask = \"\"\n  }\n\n  addTask() {\n    const task = { taskName: this.newTask, completed: false };\n    this.dataService.addTask(task);\n    this.onFormSubmitted.emit(this.newTask)\n    this.newTask = \"\";\n  }\n}\n\n","<form (ngSubmit)=\"addTask()\">\n    <input type=\"text\" [(ngModel)]=\"newTask\" [ngModelOptions]=\"{standalone: true}\" > \n    <button type=\"submit\">Add Task</button>\n  </form>\n"],"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;;;;;;;;AAI/D,MAIaC,iBAAiB;EAK5BC,YAAoBC,WAA+B;IAA/B,KAAAA,WAAW,GAAXA,WAAW;IAFrB,KAAAC,eAAe,GAAG,IAAIJ,YAAY,EAAY;IAGtD,IAAI,CAACK,OAAO,GAAG,EAAE;EACnB;EAEAC,OAAOA,CAAA;IACL,MAAMC,IAAI,GAAG;MAAEC,QAAQ,EAAE,IAAI,CAACH,OAAO;MAAEI,SAAS,EAAE;IAAK,CAAE;IACzD,IAAI,CAACN,WAAW,CAACG,OAAO,CAACC,IAAI,CAAC;IAC9B,IAAI,CAACH,eAAe,CAACM,IAAI,CAAC,IAAI,CAACL,OAAO,CAAC;IACvC,IAAI,CAACA,OAAO,GAAG,EAAE;EACnB;;AAdWJ,iBAAiB,C;mBAAjBA,iBAAiB,EAAAU,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;AAAA;AAAjBb,iBAAiB,C;QAAjBA,iBAAiB;EAAAc,SAAA;EAAAC,OAAA;IAAAZ,eAAA;EAAA;EAAAa,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9BX,EAAA,CAAAa,cAAA,cAA6B;MAAvBb,EAAA,CAAAc,UAAA,sBAAAC,oDAAA;QAAA,OAAYH,GAAA,CAAAjB,OAAA,EAAS;MAAA,EAAC;MACxBK,EAAA,CAAAa,cAAA,eAAgF;MAA7Db,EAAA,CAAAc,UAAA,2BAAAE,0DAAAC,MAAA;QAAA,OAAAL,GAAA,CAAAlB,OAAA,GAAAuB,MAAA;MAAA,EAAqB;MAAxCjB,EAAA,CAAAkB,YAAA,EAAgF;MAChFlB,EAAA,CAAAa,cAAA,gBAAsB;MAAAb,EAAA,CAAAmB,MAAA,eAAQ;MAAAnB,EAAA,CAAAkB,YAAA,EAAS;;;MADpBlB,EAAA,CAAAoB,SAAA,GAAqB;MAArBpB,EAAA,CAAAqB,UAAA,YAAAT,GAAA,CAAAlB,OAAA,CAAqB,mBAAAM,EAAA,CAAAsB,eAAA,IAAAC,GAAA;;;;;;SDO/BjC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}