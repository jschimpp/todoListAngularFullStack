{"ast":null,"code":"import axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./components/form/form.component\";\nimport * as i2 from \"./components/list/list.component\";\nclass AppComponent {\n  constructor() {\n    this.title = 'client';\n    this.tasks = [];\n    this.getTasks();\n  }\n  getTasks() {\n    axios.get('http://localhost:8080/tasks').then(response => {\n      const {\n        data\n      } = response;\n      this.tasks = data;\n      console.log(data);\n    }).catch(() => {\n      alert('Data not received');\n    });\n  }\n  addTask(task) {\n    this.tasks.push(task);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[3, \"onFormSubmitted\"], [3, \"tasks\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-form\", 0);\n      i0.ɵɵlistener(\"onFormSubmitted\", function AppComponent_Template_app_form_onFormSubmitted_0_listener($event) {\n        return ctx.addTodo($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(1, \"app-list\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"tasks\", ctx.tasks);\n    }\n  },\n  dependencies: [i1.FormComponent, i2.ListComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["axios","AppComponent","constructor","title","tasks","getTasks","get","then","response","data","console","log","catch","alert","addTask","task","push","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","AppComponent_Template_app_form_onFormSubmitted_0_listener","$event","addTodo","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\joesc\\Documents\\angular\\todolist\\client\\src\\app\\app.component.ts","C:\\Users\\joesc\\Documents\\angular\\todolist\\client\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TaskItem } from './models/taskItem';\nimport axios from 'axios';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor() {\n    this.getTasks();\n  }\n\n  title = 'client';\n  tasks: TaskItem[]=[];\n\n  getTasks() {\n    axios.get('http://localhost:8080/tasks')\n  .then((response) => {\n    const { data } = response;\n    this.tasks = data;\n    console.log(data);\n  })\n  .catch(() => {\n    alert('Data not received')\n  })\n  }\n\n  addTask(task: TaskItem) {\n    this.tasks.push(task);\n  }\n}\n","<!-- <app-form (onFormSubmitted)=\"addTodo($event)\"></app-form> -->\n<app-form (onFormSubmitted)=\"addTodo($event)\"></app-form>\n<app-list [tasks]=\"tasks\"></app-list>"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;;;;AAEzB,MAKaC,YAAY;EACvBC,YAAA;IAIA,KAAAC,KAAK,GAAG,QAAQ;IAChB,KAAAC,KAAK,GAAa,EAAE;IAJlB,IAAI,CAACC,QAAQ,EAAE;EACjB;EAKAA,QAAQA,CAAA;IACNL,KAAK,CAACM,GAAG,CAAC,6BAA6B,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAI;MACjB,MAAM;QAAEC;MAAI,CAAE,GAAGD,QAAQ;MACzB,IAAI,CAACJ,KAAK,GAAGK,IAAI;MACjBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAAC,MAAK;MACVC,KAAK,CAAC,mBAAmB,CAAC;IAC5B,CAAC,CAAC;EACF;EAEAC,OAAOA,CAACC,IAAc;IACpB,IAAI,CAACX,KAAK,CAACY,IAAI,CAACD,IAAI,CAAC;EACvB;;AAtBWd,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;QAAZA,YAAY;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRzBE,EAAA,CAAAC,cAAA,kBAA8C;MAApCD,EAAA,CAAAE,UAAA,6BAAAC,0DAAAC,MAAA;QAAA,OAAmBL,GAAA,CAAAM,OAAA,CAAAD,MAAA,CAAe;MAAA,EAAC;MAACJ,EAAA,CAAAM,YAAA,EAAW;MACzDN,EAAA,CAAAO,SAAA,kBAAqC;;;MAA3BP,EAAA,CAAAQ,SAAA,GAAe;MAAfR,EAAA,CAAAS,UAAA,UAAAV,GAAA,CAAApB,KAAA,CAAe;;;;;;SDOZH,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}