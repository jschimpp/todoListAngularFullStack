{"ast":null,"code":"import axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ListComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 1);\n    i0.ɵɵlistener(\"change\", function ListComponent_li_1_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleComplete(item_r1._id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"button\");\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"defaultChecked\", item_r1.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", item_r1.taskName, \" \");\n  }\n}\nclass ListComponent {\n  constructor() {\n    this.completed = false;\n    this.tasks = [];\n  }\n  toggleComplete(_id) {\n    const task = this.tasks.find(item => item._id === _id);\n    if (task) {\n      this.completed === !task.completed;\n      console.log(_id);\n      axios.put(`http://localhost:8080/tasks/${_id}`, {\n        completed: !task.completed\n      }).then(response => {\n        console.log('Task completed status updated:', response.data);\n      }).catch(error => {\n        console.error('Error updating task completed status:', error);\n      });\n    }\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)();\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  inputs: {\n    tasks: \"tasks\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"defaultChecked\", \"change\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\");\n      i0.ɵɵtemplate(1, ListComponent_li_1_Template, 5, 2, \"li\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ListComponent };","map":{"version":3,"names":["axios","i0","ɵɵelementStart","ɵɵlistener","ListComponent_li_1_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r3","item_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","toggleComplete","_id","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","completed","ɵɵtextInterpolate1","taskName","ListComponent","constructor","tasks","task","find","item","console","log","put","then","response","data","catch","error","selectors","inputs","decls","vars","consts","template","ListComponent_Template","rf","ctx","ɵɵtemplate","ListComponent_li_1_Template"],"sources":["C:\\Users\\joesc\\Documents\\angular\\todolist\\client\\src\\app\\components\\list\\list.component.ts","C:\\Users\\joesc\\Documents\\angular\\todolist\\client\\src\\app\\components\\list\\list.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { TaskItem } from 'src/app/models/taskItem';\nimport axios from 'axios';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent {\n  @Input() tasks: TaskItem[];\n\n  constructor() {\n    this.tasks = []\n  }\n\n  completed: boolean = false;\n\n  toggleComplete(_id: string) {\n    const task = this.tasks.find(item => item._id === _id)\n    if (task) {\n      this.completed === !task.completed;\n      console.log(_id)\n      axios.put(`http://localhost:8080/tasks/${_id}`, {completed: !task.completed})\n      .then(response => {\n        console.log('Task completed status updated:', response.data);\n      })\n      .catch(error => {\n        console.error('Error updating task completed status:', error);\n      });\n    }\n  }\n\n}\n","<ul>\n    <li *ngFor=\"let item of tasks\">\n        <input type=\"checkbox\" [defaultChecked]=\"item.completed\" (change) = \"toggleComplete(item._id)\" />{{item.taskName}}\n        <button>Delete</button>\n    </li>\n</ul>\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;;;;;;ICDrBC,EAAA,CAAAC,cAAA,SAA+B;IAC8BD,EAAA,CAAAE,UAAA,oBAAAC,oDAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAYV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,cAAA,CAAAL,OAAA,CAAAM,GAAA,CAAwB;IAAA,EAAC;IAA9Fb,EAAA,CAAAc,YAAA,EAAiG;IAAAd,EAAA,CAAAe,MAAA,GACjG;IAAAf,EAAA,CAAAC,cAAA,aAAQ;IAAAD,EAAA,CAAAe,MAAA,aAAM;IAAAf,EAAA,CAAAc,YAAA,EAAS;;;;IADAd,EAAA,CAAAgB,SAAA,GAAiC;IAAjChB,EAAA,CAAAiB,UAAA,mBAAAV,OAAA,CAAAW,SAAA,CAAiC;IAAyClB,EAAA,CAAAgB,SAAA,GACjG;IADiGhB,EAAA,CAAAmB,kBAAA,KAAAZ,OAAA,CAAAa,QAAA,MACjG;;;ADCR,MAKaC,aAAa;EAGxBC,YAAA;IAIA,KAAAJ,SAAS,GAAY,KAAK;IAHxB,IAAI,CAACK,KAAK,GAAG,EAAE;EACjB;EAIAX,cAAcA,CAACC,GAAW;IACxB,MAAMW,IAAI,GAAG,IAAI,CAACD,KAAK,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACb,GAAG,KAAKA,GAAG,CAAC;IACtD,IAAIW,IAAI,EAAE;MACR,IAAI,CAACN,SAAS,KAAK,CAACM,IAAI,CAACN,SAAS;MAClCS,OAAO,CAACC,GAAG,CAACf,GAAG,CAAC;MAChBd,KAAK,CAAC8B,GAAG,CAAC,+BAA+BhB,GAAG,EAAE,EAAE;QAACK,SAAS,EAAE,CAACM,IAAI,CAACN;MAAS,CAAC,CAAC,CAC5EY,IAAI,CAACC,QAAQ,IAAG;QACfJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEG,QAAQ,CAACC,IAAI,CAAC;MAC9D,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAG;QACbP,OAAO,CAACO,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D,CAAC,CAAC;;EAEN;;AAtBWb,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;QAAbA,aAAa;EAAAc,SAAA;EAAAC,MAAA;IAAAb,KAAA;EAAA;EAAAc,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT1B1C,EAAA,CAAAC,cAAA,SAAI;MACAD,EAAA,CAAA4C,UAAA,IAAAC,2BAAA,gBAGK;MACT7C,EAAA,CAAAc,YAAA,EAAK;;;MAJoBd,EAAA,CAAAgB,SAAA,GAAQ;MAARhB,EAAA,CAAAiB,UAAA,YAAA0B,GAAA,CAAApB,KAAA,CAAQ;;;;;;SDQpBF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}