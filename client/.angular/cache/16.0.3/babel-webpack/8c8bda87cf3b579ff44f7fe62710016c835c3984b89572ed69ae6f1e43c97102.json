{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/rxjs/DataService\";\nimport * as i2 from \"@angular/common\";\nfunction TaskListComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"completed\", task_r1.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r1.taskName);\n  }\n}\nclass TaskListComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.dataService.getTasks();\n    this.dataService.tasks$.subscribe(tasks => {\n      this.tasks = tasks;\n    });\n  }\n}\nTaskListComponent.ɵfac = function TaskListComponent_Factory(t) {\n  return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.DataSharingService));\n};\nTaskListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskListComponent,\n  selectors: [[\"app-task-list\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function TaskListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\");\n      i0.ɵɵtemplate(1, TaskListComponent_li_1_Template, 3, 3, \"li\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\".completed[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9saXN0L2xpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0UsNkJBQUE7QUFBTiIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIC5jb21wbGV0ZWQge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG4gICAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { TaskListComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵclassProp","task_r1","completed","ɵɵtextInterpolate","taskName","TaskListComponent","constructor","dataService","tasks","ngOnInit","getTasks","tasks$","subscribe","ɵɵdirectiveInject","i1","DataSharingService","selectors","decls","vars","consts","template","TaskListComponent_Template","rf","ctx","ɵɵtemplate","TaskListComponent_li_1_Template","ɵɵproperty"],"sources":["C:\\Users\\joesc\\Documents\\angular\\todolist2axios\\client\\src\\app\\components\\list\\list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskItem } from 'src/app/models/taskItem';\nimport { DataSharingService } from 'src/app/rxjs/DataService';\n\n@Component({\n  selector: 'app-task-list',\n  template: `\n    <ul>\n      <li *ngFor=\"let task of tasks\">\n        <span [class.completed]=\"task.completed\">{{ task.taskName }}</span>\n      </li>\n    </ul>\n  `,\n  styles: [`\n    .completed {\n      text-decoration: line-through;\n    }\n  `]\n})\nexport class TaskListComponent {\n  tasks: TaskItem[]=[];\n\n  constructor(private dataService: DataSharingService) {}\n\n  ngOnInit() {\n    this.dataService.getTasks();\n    this.dataService.tasks$.subscribe((tasks) => {\n      this.tasks = tasks;\n    });\n  }\n}\n"],"mappings":";;;;;IAQMA,EAAA,CAAAC,cAAA,SAA+B;IACYD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAA7DH,EAAA,CAAAI,SAAA,GAAkC;IAAlCJ,EAAA,CAAAK,WAAA,cAAAC,OAAA,CAAAC,SAAA,CAAkC;IAACP,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAQ,iBAAA,CAAAF,OAAA,CAAAG,QAAA,CAAmB;;;AALpE,MAeaC,iBAAiB;EAG5BC,YAAoBC,WAA+B;IAA/B,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,KAAK,GAAa,EAAE;EAEkC;EAEtDC,QAAQA,CAAA;IACN,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE;IAC3B,IAAI,CAACH,WAAW,CAACI,MAAM,CAACC,SAAS,CAAEJ,KAAK,IAAI;MAC1C,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;;AAVWH,iBAAiB,C;mBAAjBA,iBAAiB,EAAAV,EAAA,CAAAkB,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;AAAA;AAAjBV,iBAAiB,C;QAAjBA,iBAAiB;EAAAW,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAZ1B3B,EAAA,CAAAC,cAAA,SAAI;MACFD,EAAA,CAAA6B,UAAA,IAAAC,+BAAA,gBAEK;MACP9B,EAAA,CAAAG,YAAA,EAAK;;;MAHkBH,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAA+B,UAAA,YAAAH,GAAA,CAAAf,KAAA,CAAQ;;;;;;SAWtBH,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}